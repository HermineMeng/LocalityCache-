【idea内容：】storage+cache的结合以减少straggler影响
1.针对flat，即代码random基础上的分布规则；
  写流程时，将{一个global_parity+所有local_parity}额外写入与storage_node同cluster的cache_node作为副本。（该部分在coordinator.cpp:255-353行；proxy.cpp:103-139行）
2.读流程时，并发读取（参考了oppo新增添了Proxy::decode_and_transfer_data_concurrence）并解码。
  现存问题：全部写入cachenode+并发读取没有问题；
           全部写入datanode+并发读取，my_assert(stored_value == kv.second)有问题，拼接出来≠原始数据；
           按照idea写入datanode+cachenode，并发读取也存在该问题。
           （也就是写入json文件的方式，在并发读取部分存在问题；注：写入json文件拼接k个数据块恢复数据是没问题的）




【运行：】
1.编译按happylrc步骤
2.需要修改：run_coordinator.cpp中sonfig.xml地址；datanode.cpp中json文件存储地址（注：happylrc/jsonout文件夹是json结果存储的路径，其中每个datanode维护自己的文件避免冲突。
  每次重新运行都需要删除该文件夹并重新创建jsonout文件夹）。
